/** 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * VUMeter.java
 *
 * Created on den 21 juli 2007, 15:31
 */

package com.lfv.lanzius;

import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;

/**
 *
 * @author  Andreas
 */
public class VUMeter extends javax.swing.JFrame implements WindowListener {

    private boolean running;
    private int maxValue = -1;
    private int maxValueHold = 0;
    private int valueClearedHold = 0;

    /** Creates new form VUMeter */
    public VUMeter() {
        running = true;
        initComponents();
        setLocationRelativeTo(null);
        addWindowListener(this);
        setTitle(Config.TITLE + " - VU Meter");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jProgressBar2 = new javax.swing.JProgressBar();
        jTextField1 = new javax.swing.JTextField();
        vUMeterGrad1 = new com.lfv.lanzius.VUMeterGrad();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("VU Meter");

        jProgressBar1.setDoubleBuffered(true);
        jProgressBar1.setFocusable(false);
        jProgressBar1.setPreferredSize(new java.awt.Dimension(146, 15));
        jProgressBar1.setStringPainted(true);

        jProgressBar2.setDoubleBuffered(true);
        jProgressBar2.setFocusable(false);
        jProgressBar2.setStringPainted(true);

        jTextField1.setText("Peak: ");
        jTextField1.setDoubleBuffered(true);
        jTextField1.setFocusable(false);

        org.jdesktop.layout.GroupLayout vUMeterGrad1Layout = new org.jdesktop.layout.GroupLayout(vUMeterGrad1);
        vUMeterGrad1.setLayout(vUMeterGrad1Layout);
        vUMeterGrad1Layout.setHorizontalGroup(
            vUMeterGrad1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 499, Short.MAX_VALUE)
        );
        vUMeterGrad1Layout.setVerticalGroup(
            vUMeterGrad1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 10, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(vUMeterGrad1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jProgressBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .add(jProgressBar2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(vUMeterGrad1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jProgressBar2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {jProgressBar1, jProgressBar2}, org.jdesktop.layout.GroupLayout.VERTICAL);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setValue(int value) {
        if(value<0) value = 0;
        if(value>100) value = 100;

        if(valueClearedHold>0)
            valueClearedHold--;

        if(valueClearedHold<=0) {
            if(value>maxValue) {
                maxValue = value;
                jTextField1.setText("Peak: "+value+ "%");
                jProgressBar2.setValue(value);
                maxValueHold = 180;
            }
            valueClearedHold = 0;
        }

        jProgressBar1.setValue(value);
        //jSlider1.setValue(value);
        if(maxValueHold>0) {
            if(value<10)
                maxValueHold--;
        }
        else if(valueClearedHold==0) {
            maxValue = -1;
            jTextField1.setText("Peak value cleared!");
            valueClearedHold = 12;
            maxValueHold = 0;
        }
    }

    public synchronized void waitStopped() {
        try {
            while(running) {
                wait();
            }
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
    }

    public void windowOpened(WindowEvent e) {
    }

    public synchronized void windowClosing(WindowEvent e) {
        setVisible(false);
        dispose();
        running = false;
        notifyAll();
    }

    public void windowClosed(WindowEvent e) {
    }

    public void windowIconified(WindowEvent e) {
    }

    public void windowDeiconified(WindowEvent e) {
    }

    public void windowActivated(WindowEvent e) {
    }

    public void windowDeactivated(WindowEvent e) {
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JTextField jTextField1;
    private com.lfv.lanzius.VUMeterGrad vUMeterGrad1;
    // End of variables declaration//GEN-END:variables

}
