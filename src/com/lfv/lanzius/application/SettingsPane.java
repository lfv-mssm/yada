/** 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * FullSettingsPane.java
 *
 * Created on den 25 juli 2007, 11:20
 */

package com.lfv.lanzius.application;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author  Andreas
 */
public class SettingsPane extends javax.swing.JPanel implements ActionListener {

    private ViewEventHandler handler;

    /** Creates new form FullSettingsPane */
    public SettingsPane(ViewEventHandler handler) {
        initComponents();
        this.handler = handler;

        Settings settings = Settings.getInstance();

        slider1.init(Settings.ID_MASTER_VOLUME, settings.getMasterVolume(), handler, new PercentageSliderConverter());
        slider2.init(Settings.ID_SIGNAL_VOLUME, settings.getSignalVolume(), handler, new PercentageSliderConverter());
        slider3.init(Settings.ID_CHPRIO_VOLUME, settings.getChprioVolume(), handler, new PercentageSliderConverter());
        slider5.init(Settings.ID_RAPASS_VOLUME, settings.getRapassVolume(), handler, new PercentageSliderConverter());

        slider4.init(Settings.ID_CHPRIO_CHOICE, settings.getChprioChoice(), handler, new ChannelPrioSliderConverter());
        slider6.init(Settings.ID_WATONE_CHOICE, settings.getWatoneChoice(), handler, new WarningToneSliderConverter());

        jButton1.addActionListener(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        slider1 = new com.lfv.lanzius.application.Slider();
        slider2 = new com.lfv.lanzius.application.Slider();
        slider3 = new com.lfv.lanzius.application.Slider();
        slider4 = new com.lfv.lanzius.application.Slider();
        slider5 = new com.lfv.lanzius.application.Slider();
        slider6 = new com.lfv.lanzius.application.Slider();
        jButton1 = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        slider1.setBorder(javax.swing.BorderFactory.createTitledBorder("Master Volume"));
        slider1.setMaximumSize(new java.awt.Dimension(0, 0));
        slider1.setMinimumSize(new java.awt.Dimension(0, 0));
        slider1.setPreferredSize(new java.awt.Dimension(0, 0));
        org.jdesktop.layout.GroupLayout slider1Layout = new org.jdesktop.layout.GroupLayout(slider1);
        slider1.setLayout(slider1Layout);
        slider1Layout.setHorizontalGroup(
            slider1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 444, Short.MAX_VALUE)
        );
        slider1Layout.setVerticalGroup(
            slider1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 42, Short.MAX_VALUE)
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(14, 14, 0, 14);
        add(slider1, gridBagConstraints);

        slider2.setBorder(javax.swing.BorderFactory.createTitledBorder("Signal Volume"));
        slider2.setMaximumSize(new java.awt.Dimension(0, 0));
        slider2.setMinimumSize(new java.awt.Dimension(0, 0));
        slider2.setPreferredSize(new java.awt.Dimension(0, 0));
        org.jdesktop.layout.GroupLayout slider2Layout = new org.jdesktop.layout.GroupLayout(slider2);
        slider2.setLayout(slider2Layout);
        slider2Layout.setHorizontalGroup(
            slider2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 444, Short.MAX_VALUE)
        );
        slider2Layout.setVerticalGroup(
            slider2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 42, Short.MAX_VALUE)
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 14, 0, 14);
        add(slider2, gridBagConstraints);

        slider3.setBorder(javax.swing.BorderFactory.createTitledBorder("Channel Priority Volume"));
        slider3.setMaximumSize(new java.awt.Dimension(0, 0));
        slider3.setMinimumSize(new java.awt.Dimension(0, 0));
        slider3.setPreferredSize(new java.awt.Dimension(0, 0));
        org.jdesktop.layout.GroupLayout slider3Layout = new org.jdesktop.layout.GroupLayout(slider3);
        slider3.setLayout(slider3Layout);
        slider3Layout.setHorizontalGroup(
            slider3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 306, Short.MAX_VALUE)
        );
        slider3Layout.setVerticalGroup(
            slider3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 42, Short.MAX_VALUE)
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 14, 0, 0);
        add(slider3, gridBagConstraints);

        slider4.setBorder(javax.swing.BorderFactory.createTitledBorder("Channel Priority"));
        slider4.setMaximumSize(new java.awt.Dimension(0, 0));
        slider4.setMinimumSize(new java.awt.Dimension(0, 0));
        slider4.setPreferredSize(new java.awt.Dimension(0, 0));
        org.jdesktop.layout.GroupLayout slider4Layout = new org.jdesktop.layout.GroupLayout(slider4);
        slider4.setLayout(slider4Layout);
        slider4Layout.setHorizontalGroup(
            slider4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 122, Short.MAX_VALUE)
        );
        slider4Layout.setVerticalGroup(
            slider4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 42, Short.MAX_VALUE)
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 14);
        add(slider4, gridBagConstraints);

        slider5.setBorder(javax.swing.BorderFactory.createTitledBorder("Radio Pass-Through Volume"));
        slider5.setMaximumSize(new java.awt.Dimension(0, 0));
        slider5.setPreferredSize(new java.awt.Dimension(0, 0));
        org.jdesktop.layout.GroupLayout slider5Layout = new org.jdesktop.layout.GroupLayout(slider5);
        slider5.setLayout(slider5Layout);
        slider5Layout.setHorizontalGroup(
            slider5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 306, Short.MAX_VALUE)
        );
        slider5Layout.setVerticalGroup(
            slider5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 42, Short.MAX_VALUE)
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 14, 0, 0);
        add(slider5, gridBagConstraints);

        slider6.setBorder(javax.swing.BorderFactory.createTitledBorder("Warning tone"));
        slider6.setMaximumSize(new java.awt.Dimension(0, 0));
        slider6.setPreferredSize(new java.awt.Dimension(0, 0));
        org.jdesktop.layout.GroupLayout slider6Layout = new org.jdesktop.layout.GroupLayout(slider6);
        slider6.setLayout(slider6Layout);
        slider6Layout.setHorizontalGroup(
            slider6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 122, Short.MAX_VALUE)
        );
        slider6Layout.setVerticalGroup(
            slider6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 42, Short.MAX_VALUE)
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 14);
        add(slider6, gridBagConstraints);

        jButton1.setBackground(java.awt.Color.lightGray);
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.setFocusPainted(false);
        jButton1.setText("CLOSE");
        jButton1.setMaximumSize(new java.awt.Dimension(0, 0));
        jButton1.setMinimumSize(new java.awt.Dimension(0, 0));
        jButton1.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.15;
        gridBagConstraints.insets = new java.awt.Insets(10, 24, 14, 24);
        add(jButton1, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    public void actionPerformed(ActionEvent e) {
        handler.settingsDialogClose();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private com.lfv.lanzius.application.Slider slider1;
    private com.lfv.lanzius.application.Slider slider2;
    private com.lfv.lanzius.application.Slider slider3;
    private com.lfv.lanzius.application.Slider slider4;
    private com.lfv.lanzius.application.Slider slider5;
    private com.lfv.lanzius.application.Slider slider6;
    // End of variables declaration//GEN-END:variables

    private class PercentageSliderConverter implements Slider.Configurator {
        public int getNbrSteps() {
            return Settings.NBR_VOLUME_STEPS;
        }
        public int getSpacing() {
            return 5;
        }
        public String convertValue(int value) {
            return 100*value/(Settings.NBR_VOLUME_STEPS-1) + "%";
        }
    }
    private class ChannelPrioSliderConverter implements Slider.Configurator {
        String[] array = {"RA", "OFF", "PH"};
        public int getNbrSteps() {
            return 3;
        }
        public int getSpacing() {
            return 1;
        }
        public String convertValue(int value) {
            if(value>2) value=2;
            if(value<0) value=0;
            return array[value];
        }
    }
    private class WarningToneSliderConverter implements Slider.Configurator {
        public int getNbrSteps() {
            return 2;
        }
        public int getSpacing() {
            return 1;
        }
        public String convertValue(int value) {
            if(value==1)
                return "ON";
            return "OFF";
        }
    }
}
